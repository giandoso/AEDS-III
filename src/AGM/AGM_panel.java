package AGM;

import static AGM.DAO.ops;
import static AGM.Reader.tuplas;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author giandoso
 */
public class AGM_panel extends javax.swing.JPanel {

    public Graphics2D g2d;
    public Graph g;
    public List<Aresta> arestas;
    

    /**
     * Creates new form AGM_panel
     */
    public AGM_panel() {
        initComponents();
    }

    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        try {

            g2d = (Graphics2D) g;
            System.out.println("");
            for (Aresta a : arestas) {
//            System.out.println(a.getOrigem() + " -> " + a.getDestino());
                int xOrigem = (int) DAO.g.lista_vertices.get(a.getOrigem()).getX() * 5;
                int yOrigem = (int) DAO.g.lista_vertices.get(a.getOrigem()).getY() * 5;
                int xDestino = (int) DAO.g.lista_vertices.get(a.getDestino()).getX() * 5;
                int yDestino = (int) DAO.g.lista_vertices.get(a.getDestino()).getY() * 5;
                g2d.setColor(Color.BLACK);
                g2d.drawLine(xOrigem, yOrigem, xDestino, yDestino);
            }

        } catch (Exception e) {
        }

        g2d.setColor(Color.red);
        for (double[] tupla : Reader.tuplas) {
            g2d.fillOval((int) (tupla[0] - 1) * 5, (int) (tupla[1] - 1) * 5, 7, 7);
        }

    }

    public void redraw() {
        System.out.println("Redesenhando");
        Kruskal k = new Kruskal();
        
        
        String[] s = DAO.ops.get(0);
        DAO.ops.remove(0);
        
        System.out.println(s[0]);
        if("rm".equals(s[0])){
            DAO.g.removeAresta(Integer.parseInt(s[1]), Integer.parseInt(s[2]));
        }
        if("add".equals(s[0])){
            double distancia = Reader.getDistancia(tuplas.get(Integer.parseInt(s[1])), tuplas.get(Integer.parseInt(s[2])));
            DAO.g.addAresta(Integer.parseInt(s[1]), Integer.parseInt(s[2]), distancia);
        }
        List<Aresta> arestas_oredenas = DAO.g.getArestasOrdenadas();
        k.run(arestas_oredenas);
        this.arestas = k.getX();

        

        repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
